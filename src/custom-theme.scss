
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

$md-mcgpalette0: (
  50 : #e0f3ee,
  100 : #b3e1d5,
  200 : #80cdb9,
  300 : #4db99c,
  400 : #26aa87,
  500 : #009b72,
  600 : #00936a,
  700 : #00895f,
  800 : #007f55,
  900 : #006d42,
  A100 : #9cffd1,
  A200 : #69ffb9,
  A400 : #36ffa1,
  A700 : #1dff95,
  contrast: (
      50 : #000000,
      100 : #000000,
      200 : #000000,
      300 : #000000,
      400 : #ffffff,
      500 : #ffffff,
      600 : #ffffff,
      700 : #ffffff,
      800 : #ffffff,
      900 : #ffffff,
      A100 : #000000,
      A200 : #000000,
      A400 : #000000,
      A700 : #000000,
  )
);


$frontGesLog-primary: mat.define-palette($md-mcgpalette0);
$frontGesLog-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$frontGesLog-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$frontGesLog-theme: mat.define-light-theme((
  color: (
    primary: $frontGesLog-primary,
    accent: $frontGesLog-accent,
    warn: $frontGesLog-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($frontGesLog-theme);

